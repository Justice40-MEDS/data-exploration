---
title: "Data visualization for faculty review"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(here)
library(sysfonts)
library(showtext)
library(glue)
library(ggtext)
library(scales)
```

### Data and theme

```{r}
dem <- read_csv(here("demographics", "dem_melted.csv"))
dem_wide <- read_csv(here("demographics", "dem_wide.csv"))

# Enable showtext
showtext_auto()

# Ensure showtext is used
showtext_opts(dpi = 300)

# dem_small <- sample_n(dem, 100)
# write_csv(dem_small, "~/Downloads/dem_small.csv")
```
```{r}
my_pal_named = c("American Indian and Alaskan Native" = "#972843", 
                "Black or African American" = "#9CBF5D", 
                "Native Hawaiian and Pacific Islander" = "#741CD6", 
                # "Two Or More Races" = "#46265c", 
                "Asian" = "#6d8ef7", 
                "Hispanic or Latino" = "#DC267F", 
                "Other Race" = "#1E6A9C", 
                "White (Non-Hispanic)" = "#FE6100"
)
```


```{r}
font_add_google(name = "Lexend", family = "lexend")
font_add_google(name = "Poppins", family = "poppins")

#....................import Font Awesome fonts...................
font_add(family = "fa-brands",
         regular = here::here("fonts", "Font Awesome 6 Brands-Regular-400.otf"))
font_add(family = "fa-regular",
         regular = here::here("fonts", "Font Awesome 6 Free-Regular-400.otf")) 
font_add(family = "fa-solid",
         regular = here::here("fonts", "Font Awesome 6 Free-Solid-900.otf"))

```

### Data wrangling

```{r}
dem_wide <- dem_wide %>% 
  mutate(other_races = other_races + two_or_more_races) %>% 
  select(!two_or_more_races)

dem_long <- dem_wide %>% 
  pivot_longer(cols = c(black, american_indian_alaskan_native, asian, 
             native_hawaiian_pacific_islander, 
             white, hispanic_latino, other_races),
    names_to = "racial_group",
    values_to = "percentage")
```

```{r}
dem <- dem_long %>% 
  select(racial_group, percentage, total_burdens, total_criteria, total_population, tract_id, dac)
```


```{r}
dem <- dem %>% 
  mutate(racial_group = str_replace(racial_group, "asian", "Asian"),
         racial_group = str_replace(racial_group, "black", "Black or African American"),
         racial_group = str_replace(racial_group, "american_indian_alaskan_native", "American Indian and Alaskan Native"),
         racial_group = str_replace(racial_group, "native_hawaiian_pacific_islander", "Native Hawaiian and Pacific Islander"),
         racial_group = str_replace(racial_group, "other_races", "Other Race"),
         racial_group = str_replace(racial_group, "hispanic_latino", "Hispanic or Latino"),
         racial_group = str_replace(racial_group, "white", "White (Non-Hispanic)"))

dem$racial_group <- factor(dem$racial_group, 
                           levels = c(
                             "American Indian and Alaskan Native",
                             "Native Hawaiian and Pacific Islander",
                             "Asian",
                             "Other Race",
                             "Hispanic or Latino",
                             "Black or African American",
                             "White (Non-Hispanic)"
                             ), 
                           ordered = TRUE) 

# racial_group = str_replace_all(racial_group, "_", " "),
#          racial_group = str_to_title(racial_group),

```


### Burden plot  

```{r}
# Burden plot
dem_plot_burd <- ggplot(dem, aes(x = total_burdens, y = percentage, fill = racial_group)) +
  geom_col(width = 0.8, position = "fill") +
  scale_fill_manual(values = my_pal_named, labels = c(
    "American Indian and Alaskan Native" = "American Indian\nAlaskan Native*", 
                "Black or African American" = "Black\nAfrican American*", 
                "Native Hawaiian and Pacific Islander" = "Native Hawaiian\nPacific Islander*", 
                "Asian" = "Asian*", 
                "Hispanic or Latino" = "Hispanic\nLatino", 
                "Other Race" = "Other Race*", 
                "White (Non-Hispanic)" = "White*"
  )) + # use color palette from earlier
  scale_x_continuous(breaks = seq(0,8,1)) +
  labs(
    title = "Distribution of Total Burdens by Racial/Ethnic Group",
    x = "Total Burdens",
    y = "Proportion",
    fill = "Racial\nGroup"
    
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "lexend"),
    legend.position = "top",
    plot.title = element_text(size = 18),
    # legend.title = element_text(size = 13),
    legend.title = element_blank(),
    legend.text = element_text(size = 13),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 12, color = "black"),
    plot.background = element_rect(fill = "white", color = NA),
    panel.grid = element_blank(), 
    axis.line = element_line(linewidth = 0.5, color = "grey20") 
  )
dem_plot_burd
```

```{r}
ggsave(
  filename = here::here("images", "dem_burd.png"),
  plot = dem_plot_burd, 
  device = "png",
  width = 10, 
  height = 6,
  unit = "in",
  dpi = 300,
)
```

### Indicator plot

```{r}
# Indicator plot
dem_plot_ind <- ggplot(dem, aes(x = total_criteria, y = percentage, fill = racial_group)) +
  geom_col(width = 0.8, position = "fill") +
  scale_fill_manual(values = my_pal_named, labels = c(
    "American Indian and Alaskan Native" = "American Indian\nAlaskan Native*", 
                "Black or African American" = "Black\nAfrican American*", 
                "Native Hawaiian and Pacific Islander" = "Native Hawaiian\nPacific Islander*", 
                "Asian" = "Asian*", 
                "Hispanic or Latino" = "Hispanic\nLatino", 
                "Other Race" = "Other Race*", 
                "White (Non-Hispanic)" = "White*"
  )) + # use color palette from earlier
  scale_x_continuous(breaks = seq(0,18,1)) +
  labs(
    title = "Distribution of Total Indicators by Racial/Ethnic Group",
    x = "Total Indicators",
    y = "Proportion",
    fill = "Racial\nGroup"
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "lexend"),
    legend.position = "top",
    plot.title = element_text(size = 18),
    # legend.title = element_text(size = 13),
    legend.title = element_blank(),
    legend.text = element_text(size = 13),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 12, color = "black"),
    plot.background = element_rect(fill = "white", color = NA),
    panel.grid = element_blank(), 
    axis.line = element_line(linewidth = 0.5, color = "grey20") 
  )
dem_plot_ind
```

```{r}
ggsave(
  filename = here::here("images", "dem_ind.png"),
  plot = dem_plot_ind, 
  device = "png",
  width = 10, 
  height = 6,
  unit = "in",
  dpi = 300,
)
```


### DAC Non-DAC plot

```{r}
dem$dac <- factor(dem$dac, levels = c(FALSE, TRUE), labels = c("Non-DAC", "All DACs"))

dac_group <- dem %>% 
  group_by(dac) %>% 
  summarise(racial_group = racial_group,
            percentage = percentage)

```

```{r}
# DAC plot
dac_plot <- ggplot(dac_group, aes(x = dac, 
                            y = percentage, 
                            fill = racial_group, 
                            group = racial_group)) +
  geom_col(width = 0.8, position = "fill") +
  scale_fill_manual(values = my_pal_named, labels = c(
    "American Indian and Alaskan Native" = "American Indian\nAlaskan Native", 
                "Black or African American" = "Black\nAfrican American", 
                "Native Hawaiian and Pacific Islander" = "Native Hawaiian\nPacific Islander", 
                "Asian" = "Asian", 
                "Hispanic or Latino" = "Hispanic\nLatino", 
                "Other Race" = "Other Race", 
                "White (Non-Hispanic)" = "White\n(Non-Hispanic)"
  )) + 
  labs(
    title = "Distribution of Total Burdens by Disadvantaged Status",
    x = "DAC",
    y = "Proportion",
    fill = "Racial\nGroup"
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "lexend"),
    legend.position = "top",
    plot.title = element_text(size = 18),
    # legend.title = element_text(size = 13),
    legend.title = element_blank(),
    axis.title.x = element_blank(),
    legend.text = element_text(size = 13),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 16, color = "black", face = "bold"),
    plot.background = element_rect(fill = "white", color = NA),
    panel.grid = element_blank(), 
    axis.line = element_line(linewidth = 0.8, color = "black") 
  )
dac_plot
```

```{r}
ggsave(
  filename = here::here("images", "dac.png"),
  plot = dac_plot, 
  device = "png",
  width = 4, 
  height = 8,
  unit = "in",
  dpi = 300,
)
```


### Population Burdens plot

```{r}
# Population plot
pop_burd_plot <- ggplot(dem, aes(x = total_burdens, y = total_population, group = total_burdens)) +
  geom_col(width = 0.8, fill = "#46265c") +
  scale_x_continuous(breaks = seq(0,8,1)) +
  # scale_y_continuous(labels = function(x) {
  #   formatted_labels <- ifelse(
  #     round(x, -1000) == 500000, "500,000", 
  #     ifelse(round(x, -1000) == 1000000, "1 M", 
  #            label_number(scale = 1e-9, suffix = " M")(x))
  #   )
  #   return(formatted_labels)
  # }) +
  scale_y_continuous(labels = function(x) {
    case_when(
      x == 0 ~ "0",
      near(x, 5e5) ~ "1/2 M",
      near(x, 1e6) ~ "1 M",
      TRUE ~ label_number(scale = 1e-9, suffix = " M")(x)  # Default formatting
    )
  }) +
  labs(
    title = "Total Population by Total Burdens",
    x = "Total Burdens",
    y = "Population") +
  theme_minimal() +
  theme(
    text = element_text(family = "lexend"),
    legend.position = "top",
    plot.title = element_text(size = 18),
    # legend.title = element_text(size = 13),
    legend.title = element_blank(),
    legend.text = element_text(size = 13),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 12, color = "black"),
    plot.background = element_rect(fill = "white", color = NA),
    panel.grid = element_blank(), 
    axis.line = element_line(linewidth = 0.5, color = "grey20") 
  )
pop_burd_plot
```

```{r}
ggsave(
  filename = here::here("images", "pop_burd.png"),
  plot = pop_burd_plot, 
  device = "png",
  width = 10, 
  height = 6,
  unit = "in",
  dpi = 300,
)
```

### Population Indicators plot

```{r}
# Population plot
pop_ind_plot <- ggplot(dem, aes(x = total_criteria, y = total_population, group = total_burdens)) +
  geom_col(width = 0.8, fill = "#46265c") +
  scale_x_continuous(breaks = seq(0,18,1)) +
  # scale_y_continuous(labels = function(x) {
  #   formatted_labels <- ifelse(
  #     round(x, -1000) == 500000, "500,000", 
  #     ifelse(round(x, -1000) == 1000000, "1 M", 
  #            label_number(scale = 1e-9, suffix = " M")(x))
  #   )
  #   return(formatted_labels)
  # }) +
  scale_y_continuous(labels = function(x) {
    case_when(
      x == 0 ~ "0",
      near(x, 5e5) ~ "1/2 M",
      near(x, 1e6) ~ "1 M",
      TRUE ~ label_number(scale = 1e-9, suffix = " M")(x)  # Default formatting
    )
  }) +
  labs(
    title = "Total Population by Total Indicators",
    x = "Total Burdens",
    y = "Population") +
  theme_minimal() +
  theme(
    text = element_text(family = "lexend"),
    legend.position = "top",
    plot.title = element_text(size = 18),
    # legend.title = element_text(size = 13),
    legend.title = element_blank(),
    legend.text = element_text(size = 13),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 12, color = "black"),
    plot.background = element_rect(fill = "white", color = NA),
    panel.grid = element_blank(), 
    axis.line = element_line(linewidth = 0.5, color = "grey20") 
  )
pop_ind_plot
```

```{r}
ggsave(
  filename = here::here("images", "pop_ind.png"),
  plot = pop_ind_plot, 
  device = "png",
  width = 10, 
  height = 6,
  unit = "in",
  dpi = 300,
)
```

```{r}

```



### Histogram of Burdens
```{r}
# Histogram of Burdens plot
hist_burd <- ggplot(dem, aes(x = total_burdens)) +
  geom_histogram(fill = "#46265c") +
  # scale_x_continuous(breaks = seq(0,18,1)) +
  labs(
    title = "Total Burdens",
    x = "Number of Burdens",
    y = "Count") +
  theme_minimal() +
  theme(
    text = element_text(family = "lexend"),
    legend.position = "top",
    plot.title = element_text(size = 18),
    # legend.title = element_text(size = 13),
    legend.title = element_blank(),
    legend.text = element_text(size = 13),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 12, color = "black"),
    plot.background = element_rect(fill = "white", color = NA),
    panel.grid = element_blank(), 
    axis.line = element_line(linewidth = 0.5, color = "grey20") 
  )
hist_burd
```

