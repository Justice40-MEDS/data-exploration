---
title: "Untitled"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(here)
library(sysfonts)
library(showtext)
library(glue)
library(ggtext)
```


```{r}
dem <- read_csv(here("demographics", "dem_melted.csv"))

# Enable showtext
showtext_auto()

# Ensure showtext is used
showtext_opts(dpi = 300)

# dem_small <- sample_n(dem, 100)
# write_csv(dem_small, "~/Downloads/dem_small.csv")
```

```{r}
dem <- dem %>% 
  mutate(other_races = other_races + two_or_more_races)
```


```{r}
dem <- dem %>% 
  mutate(racial_group = str_replace_all(racial_group, "_", " "),
         racial_group = str_to_title(racial_group),
         racial_group = str_replace(racial_group, "Black", "Black or African American"),
         racial_group = str_replace(racial_group, "American Indian Alaskan Native", "American Indian and Alaskan Native"),
         racial_group = str_replace(racial_group, "Native Hawaiian Pacific Islander", "Native Hawaiian and Pacific Islander"),
         racial_group = str_replace(racial_group, "Other Races", "Some Other Race"),
         racial_group = str_replace(racial_group, "Hispanic Latino", "Hispanic or Latino"))

# After fixing names, combine other and 2+
dem <- dem %>% 
```


```{r}
my_pal_named = c("American Indian and Alaskan Native" = "#972843", 
                "Black or African American" = "#DC267F", 
                "Native Hawaiian and Pacific Islander" = "#741CD6", 
                "Two Or More Races" = "#46265c", 
                "Asian" = "#6d8ef7", 
                "Hispanic or Latino" = "#9CBF5D", 
                "Some Other Race" = "#1E6A9C", 
                "White" = "#FE6100"
)
```


```{r}
font_add_google(name = "Lexend", family = "lexend")
font_add_google(name = "Poppins", family = "poppins")

#....................import Font Awesome fonts...................
font_add(family = "fa-brands",
         regular = here::here("fonts", "Font Awesome 6 Brands-Regular-400.otf"))
font_add(family = "fa-regular",
         regular = here::here("fonts", "Font Awesome 6 Free-Regular-400.otf")) 
font_add(family = "fa-solid",
         regular = here::here("fonts", "Font Awesome 6 Free-Solid-900.otf"))

```


```{r}

dem_plot <- ggplot(dem, aes(x = total_burdens, y = percentage, fill = racial_group)) +
  geom_col(width = 0.8, position = "fill") +
  scale_fill_manual(values = my_pal_named, labels = c(
    "American Indian and Alaskan Native" = "America Indian\nAlaskan Native", 
                "Black or African American" = "Black", 
                "Native Hawaiian and Pacific Islander" = "Native Hawaiian\nPacific Islander", 
                "Two Or More Races" = "2+ Races", 
                "Asian" = "Asian", 
                "Hispanic or Latino" = "Hispanic\nLatino", 
                "Some Other Race" = "Other", 
                "White" = "White"
  )) + # use color palette from earlier
  labs(
    title = "Distribution of Total Burdens by Racial Group",
    x = "Total Burdens",
    y = "Proportion",
    fill = "Racial\nGroup"
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "lexend"),
    legend.position = "top",
    plot.title = element_text(size = 18),
    # legend.title = element_text(size = 13),
    legend.title = element_blank(),
    legend.text = element_text(size = 13),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 11, color = "black"),
    plot.background = element_rect(fill = "white", color = NA),

  )

```

```{r}
ggsave(
  filename = here::here("images", "dem.png"),
  plot = dem_plot, 
  device = "png",
  width = 10, 
  height = 6,
  unit = "in",
  dpi = 300,
)
```


```{r}

ggplot(dem, aes(x = racial_group, y = total_burdens, fill = racial_group)) +
  geom_boxplot(outlier.shape = NA, alpha = 0.7) +  # Boxplot with transparency
  # geom_jitter(alpha = 0.3, width = 0.2) +  # Adds individual data points
  scale_fill_manual(values = my_pal_named) + # use color palette from earlier
  labs(
    title = "Distribution of Total Burdens by Racial Group",
    x = "Racial Group",
    y = "Total Burdens",
    fill = "Racial Group"
  ) +
  theme_minimal() +
  theme(
    legend.position = "none",  # Hides legend since color is redundant
    axis.text.x = element_text(angle = 45, hjust = 1),
    text = element_text(size = 14)
  )

```

